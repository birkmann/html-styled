html {
  margin: 0;
  padding: 0;
  border: 0; }

body, div, span, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, code, del, dfn, em, img, q, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, dialog, figure, footer, header, hgroup, nav, section {
  margin: 0;
  padding: 0;
  border: 0;
  font-weight: inherit;
  font-style: inherit;
  font-size: 100%;
  font-family: inherit;
  vertical-align: baseline; }

article, aside, dialog, figure, footer, header, hgroup, nav, section {
  display: block; }

body {
  line-height: 1.5;
  background: white; }

table {
  border-collapse: separate;
  border-spacing: 0; }

caption, th, td {
  text-align: left;
  font-weight: normal;
  float: none !important; }

table, th, td {
  vertical-align: middle; }

blockquote before, blockquote after, q before, q after {
  content: ''; }

a img {
  border: none; }

b, i {
  display: none; }

* {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  outline: 0 none; }

p {
  margin: 0 0 15px; }

a {
  color: blue;
  text-decoration: underline; }
  a:hover {
    color: #333; }

nav ul li {
  list-style: none; }
  nav ul li a {
    text-decoration: none; }

ul, ol {
  padding: 0 0 0 28px; }

h1, h2, h3, h4, h5, h6 {
  font-weight: bold;
  margin: 10px 0; }

h1 {
  font-size: 1.75em;
  margin: 15px 0; }

h2 {
  font-size: 1.4em;
  margin: 12px 0; }

h3 {
  font-size: 1.3em; }

h4 {
  font-size: 1.2em; }

h5 {
  font-size: 1.1em; }

h6 {
  font-size: 1em; }

blockquote {
  font-style: italic;
  border-left: 5px solid #eee;
  padding-left: 25px;
  margin: 10px 0; }

table {
  width: 100%; }
  table caption {
    font-size: 0.8em; }
  table thead th {
    font-weight: bold; }

hr {
  border: 0;
  border-top: 1px solid #ccc; }

article {
  margin: 10px 0; }

form p {
  margin: 0 0 10px; }
form label {
  width: 100%;
  display: block;
  font-size: 0.8em; }
form textarea, form input[type="text"], form input[type="search"], form input[type="password"], form input[type="url"], form input[type="email"], form input[type="number"], form input[type="date"], form input[type="month"], form input[type="week"], form input[type="datetime"], form input[type="datetime-local"] {
  width: 100%;
  padding: 10px 10px;
  font-size: 0.8em;
  border: 1px solid #ccc;
  line-height: 1.4em; }
form input[type="range"] {
  width: 100%; }
form .list--bare {
  padding: 0; }
  form .list--bare li {
    list-style: none; }
form .switch {
  margin: -5px 0 -5px 0px;
  -webkit-appearance: none;
  width: 60px;
  height: 26px;
  background: #999;
  border-radius: 999px;
  cursor: pointer;
  -webkit-transition: background 0.3s ease-out;
          transition: background 0.3s ease-out; }
  form .switch:focus {
    outline: none; }
  form .switch:checked {
    background: #333; }
  form .switch:after {
    content: '';
    display: block;
    background: white;
    width: 20px;
    height: 20px;
    border-radius: 999px;
    position: relative;
    top: 3px;
    left: 3px;
    -webkit-transition: left 0.3s ease-out;
            transition: left 0.3s ease-out; }
  form .switch:checked:after {
    left: 36px; }
form .radio {
  margin: -5px 0 -5px 0px;
  -webkit-appearance: none;
  width: 26px;
  height: 26px;
  background: #999;
  border-radius: 9999px;
  -webkit-transition: background 0.3s ease-out;
          transition: background 0.3s ease-out;
  cursor: pointer; }
  form .radio:after {
    content: '';
    display: block;
    background: white;
    width: 0px;
    height: 0px;
    border-radius: 999px;
    position: relative;
    top: 13px;
    left: 13px;
    -webkit-transition: 0.3s ease-out;
            transition: 0.3s ease-out; }
  form .radio:checked:after {
    width: 20px;
    height: 20px;
    top: 3px;
    left: 3px; }
  form .radio:hover, form .radio:checked {
    background: #333; }
  form .radio:focus {
    outline: none; }
form .select-hidden {
  display: none;
  visibility: hidden;
  padding-right: 10px; }
form .select {
  cursor: pointer;
  display: inline-block;
  position: relative;
  font-size: 16px;
  color: #fff;
  width: 220px;
  height: 40px; }
form .select-styled {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background-color: #333;
  padding: 8px 15px;
  -webkit-transition: all 0.2s ease-in;
  transition: all 0.2s ease-in; }
  form .select-styled:after {
    content: "";
    width: 0;
    height: 0;
    border: 7px solid transparent;
    border-color: #fff transparent transparent transparent;
    position: absolute;
    top: 16px;
    right: 10px; }
  form .select-styled:hover {
    background-color: #2e2e2e; }
  form .select-styled:active, form .select-styled.active {
    background-color: #262626; }
    form .select-styled:active:after, form .select-styled.active:after {
      top: 9px;
      border-color: transparent transparent #fff transparent; }
form .select-options {
  display: none;
  position: absolute;
  top: 100%;
  right: 0;
  left: 0;
  z-index: 999;
  margin: 0;
  padding: 0;
  list-style: none;
  background-color: #262626; }
  form .select-options li {
    margin: 0;
    padding: 12px 0;
    text-indent: 15px;
    border-top: 1px solid #1a1a1a;
    -webkit-transition: all 0.15s ease-in;
    transition: all 0.15s ease-in; }
    form .select-options li:hover {
      background: black; }
    form .select-options li[rel="hide"] {
      display: none; }

/* Image Responsive */
.ir {
  max-width: 100%;
  height: auto; }

.button, button, input[type="submit"], input[type="reset"] {
  background: #333;
  border: 0 none;
  color: #fff;
  font-size: 0.9em;
  padding: 8px 15px;
  cursor: pointer; }
  .button:hover, button:hover, input[type="submit"]:hover, input[type="reset"]:hover {
    background: black; }

@media (min-width: 50em) {
  nav.basic {
    position: fixed;
    z-index: 100;
    top: 0;
    left: 0;
    width: 100%;
    background: #222; }
    nav.basic ul {
      max-width: 770px;
      margin: 0 auto;
      zoom: 1;
      padding: 0; }
      nav.basic ul:before, nav.basic ul:after {
        content: "\0020";
        display: block;
        height: 0;
        overflow: hidden; }
      nav.basic ul:after {
        clear: both; }
      nav.basic ul li {
        float: left; }
        nav.basic ul li a {
          display: block;
          padding: 10px;
          color: #fff;
          font-weight: 100;
          font-size: 0.9em; }
        nav.basic ul li ul {
          display: none; }
          nav.basic ul li ul li {
            float: none; }
            nav.basic ul li ul li a {
              color: #aaa; }
        nav.basic ul li:hover ul {
          display: block;
          position: absolute;
          z-index: 100;
          background: #222; }
          nav.basic ul li:hover ul li a:hover {
            color: #fff; } }

body {
  font: normal 18px/1.6em sans-serif; }

.wrapper {
  max-width: 800px;
  margin: 0 auto;
  padding: 0 15px; }

.row {
  zoom: 1; }
  .row:before, .row:after {
    content: "\0020";
    display: block;
    height: 0;
    overflow: hidden; }
  .row:after {
    clear: both; }
  @media (min-width: 64em) {
    .row .col-6 {
      width: 49.15254%;
      float: left;
      margin-right: 1.69492%; } }
  @media (min-width: 64em) {
    .row .col-6:last-child {
      width: 49.15254%;
      float: right;
      margin-right: 0; } }
  @media (min-width: 64em) {
    .row .col-6.last-child {
      width: 49.15254%;
      float: right;
      margin-right: 0; } }


/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdlbmVyYWwvX3Jlc2V0LnNjc3MiLCJsYXlvdXQvX2h0bWwtc3R5bGVkLnNjc3MiLCJjb25maWcvX21peGlucy5zY3NzIiwiaW5pdC5jc3MiLCJjb25maWcvX2JyZWFrcG9pbnRzLnNjc3MiLCJsYXlvdXQvX21haW4uc2NzcyIsInN1c3kvc3VzeS9vdXRwdXQvc3VwcG9ydC9fcmVtLnNjc3MiLCJzdXN5L3N1c3kvb3V0cHV0L2Zsb2F0L19zcGFuLnNjc3MiLCJzdXN5L3N1c3kvbGFuZ3VhZ2Uvc3VzeS9fc3Bhbi5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ1UsVUFBQTtFQUNSLFdBQVM7RUFDVCxVQUFRLEVBQUE7O0FBRTBOO0VBQzFOLFVBQUE7RUFDUixXQUFTO0VBQ1QsVUFBUTtFQUNLLHFCQUFBO0VBQ2Isb0JBQVk7RUFDWixnQkFBVztFQUNFLHFCQUFBO0VBQ2IseUJBQWdCLEVBQUE7O0FBR007RUFDdEIsZUFBUyxFQUFBOztBQUdYO0VBQ0UsaUJBQWE7RUFDRCxrQkFBQSxFQUFBOztBQUdkO0VBQ21CLDBCQUFBO0VBQ2pCLGtCQUFnQixFQUFBOztBQUdsQjtFQUNFLGlCQUFZO0VBQ0Msb0JBQUE7RUFDYix1QkFBTyxFQUFBOztBQUdUO0VBQ0UsdUJBQWdCLEVBQUE7O0FBR21CO0VBQ25DLFlBQVMsRUFBQTs7QUFHWDtFQUNVLGFBQUEsRUFBQTs7QUFHVjtFQUNJLGNBQVMsRUFBQTs7QUN6Q2I7RUFDQywrQkFBWTtVQUFaLHVCQUFZO0VBQ0gsZ0JBQUEsRUFBQTs7QUFHVjtFQUNTLGlCQUFBLEVBQUE7O0FBR1Q7RUFDUSxZQUFBO0VBQ1AsMkJBQWlCLEVBQUE7RUFDbEI7SUFDUyxZQUFBLEVBQUE7O0FBTUY7RUFDSixpQkFBWSxFQUFBO0VBQ2Y7SUFDSSxzQkFBaUIsRUFBQTs7QUFNckI7RUFFVSxvQkFBQSxFQUFBOztBQUdGO0VBTVAsa0JBQWE7RUFDYixlQUFRLEVBQUE7O0FBR1Q7RUFDQyxrQkFBVztFQUNILGVBQUEsRUFB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dCI6WyJodG1sIHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBib3JkZXI6IDA7XG59XG5ib2R5LCBkaXYsIHNwYW4sIG9iamVjdCwgaWZyYW1lLCBoMSwgaDIsIGgzLCBoNCwgaDUsIGg2LCBwLCBibG9ja3F1b3RlLCBwcmUsIGEsIGFiYnIsIGFjcm9ueW0sIGFkZHJlc3MsIGNvZGUsIGRlbCwgZGZuLCBlbSwgaW1nLCBxLCBkbCwgZHQsIGRkLCBvbCwgdWwsIGxpLCBmaWVsZHNldCwgZm9ybSwgbGFiZWwsIGxlZ2VuZCwgdGFibGUsIGNhcHRpb24sIHRib2R5LCB0Zm9vdCwgdGhlYWQsIHRyLCB0aCwgdGQsIGFydGljbGUsIGFzaWRlLCBkaWFsb2csIGZpZ3VyZSwgZm9vdGVyLCBoZWFkZXIsIGhncm91cCwgbmF2LCBzZWN0aW9uIHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBib3JkZXI6IDA7XG4gIGZvbnQtd2VpZ2h0OiBpbmhlcml0O1xuICBmb250LXN0eWxlOiBpbmhlcml0O1xuICBmb250LXNpemU6IDEwMCU7XG4gIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbmFydGljbGUsIGFzaWRlLCBkaWFsb2csIGZpZ3VyZSwgZm9vdGVyLCBoZWFkZXIsIGhncm91cCwgbmF2LCBzZWN0aW9uIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbmJvZHkge1xuICBsaW5lLWhlaWdodDogMS41O1xuICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbn1cblxudGFibGUge1xuICBib3JkZXItY29sbGFwc2U6IHNlcGFyYXRlO1xuICBib3JkZXItc3BhY2luZzogMDtcbn1cblxuY2FwdGlvbiwgdGgsIHRkIHtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZmxvYXQ6IG5vbmUgIWltcG9ydGFudDtcbn1cblxudGFibGUsIHRoLCB0ZCB7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG59XG5cbmJsb2NrcXVvdGUgYmVmb3JlLCBibG9ja3F1b3RlIGFmdGVyLCBxIGJlZm9yZSwgcSBhZnRlciB7XG4gIGNvbnRlbnQ6ICcnO1xufVxuXG5hIGltZyB7XG4gIGJvcmRlcjogbm9uZTtcbn1cblxuYiwgaSB7XG4gICAgZGlzcGxheTogbm9uZTtcbn0iLCIkY29sb3ItcHJpbWFyeTogIzMzMztcbiRjb2xvci1kaXNhYmxlZDogIzk5OTtcblxuJHNlbGVjdC1jb2xvcjogI2ZmZjtcbiRzZWxlY3QtYmFja2dyb3VuZDogJGNvbG9yLXByaW1hcnk7XG4kc2VsZWN0LXdpZHRoOiAyMjBweDtcbiRzZWxlY3QtaGVpZ2h0OiA0MHB4OyBcblxuKiB7XG5cdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cdG91dGxpbmU6IDAgbm9uZTtcbn1cblxucCB7XG5cdG1hcmdpbjogMCAwIDE1cHg7XG59XG5cbmEge1xuXHRjb2xvcjogYmx1ZTtcblx0dGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG5cdCY6aG92ZXIge1xuXHRcdGNvbG9yOiAjMzMzO1xuXHR9XG59XG5cbm5hdiB7XG5cdHVsIHtcblx0XHRsaSB7XG5cdFx0XHRsaXN0LXN0eWxlOiBub25lO1xuXHRcdFx0YSB7XG5cdFx0XHRcdHRleHQtZGVjb3JhdGlvbjogbm9uZTtcblx0XHRcdH1cblx0XHR9XG5cdH1cbn1cblxudWwsXG5vbCB7XG5cdHBhZGRpbmc6IDAgMCAwIDI4cHg7XG59XG5cbmgxLFxuaDIsXG5oMyxcbmg0LFxuaDUsXG5oNiB7XG5cdGZvbnQtd2VpZ2h0OiBib2xkO1xuXHRtYXJnaW46IDEwcHggMDtcbn1cblxuaDEge1xuXHRmb250LXNpemU6IDEuNzVlbTtcblx0bWFyZ2luOiAxNXB4IDA7XG59XG5cbmgyIHtcblx0Zm9udC1zaXplOiAxLjRlbTtcblx0bWFyZ2luOiAxMnB4IDA7XG59XG5cbmgzIHtcblx0Zm9udC1zaXplOiAxLjNlbTtcbn1cblxuaDQge1xuXHRmb250LXNpemU6IDEuMmVtO1xufVxuXG5oNSB7XG5cdGZvbnQtc2l6ZTogMS4xZW07XG59XG5cbmg2IHtcblx0Zm9udC1zaXplOiAxLjBlbTtcbn1cblxuYmxvY2txdW90ZSB7XG5cdGZvbnQtc3R5bGU6IGl0YWxpYztcblx0Ym9yZGVyLWxlZnQ6IDVweCBzb2xpZCAjZWVlO1xuXHRwYWRkaW5nLWxlZnQ6IDI1cHg7XG5cdG1hcmdpbjogMTBweCAwO1xufVxuXG50YWJsZSB7XG5cdHdpZHRoOiAxMDAlO1xuXHRjYXB0aW9uIHtcblx0XHRmb250LXNpemU6IDAuOGVtO1xuXHR9XG5cdHRoZWFkIHtcblx0XHR0aCB7XG5cdFx0XHRmb250LXdlaWdodDogYm9sZDtcblx0XHR9XG5cdH1cbn1cblxuaHIge1xuXHRib3JkZXI6IDA7XG5cdGJvcmRlci10b3A6IDFweCBzb2xpZCAjY2NjO1xufVxuXG5hcnRpY2xlIHtcblx0bWFyZ2luOiAxMHB4IDA7XG59XG5cbmZvcm0ge1xuXHRmaWVsZHNldCB7fVxuXHRsZWdlbmQge31cblx0cCB7XG5cdFx0bWFyZ2luOiAwIDAgMTBweDtcblx0fVxuXHRsYWJlbCB7XG5cdFx0d2lkdGg6IDEwMCU7XG5cdFx0ZGlzcGxheTogYmxvY2s7XG5cdFx0Zm9udC1zaXplOiAwLjhlbTtcblx0fVxuXHR0ZXh0YXJlYSxcblx0aW5wdXRbdHlwZT1cInRleHRcIl0sXG5cdGlucHV0W3R5cGU9XCJzZWFyY2hcIl0sXG5cdGlucHV0W3R5cGU9XCJwYXNzd29yZFwiXSxcblx0aW5wdXRbdHlwZT1cInVybFwiXSxcblx0aW5wdXRbdHlwZT1cImVtYWlsXCJdLFxuXHRpbnB1dFt0eXBlPVwibnVtYmVyXCJdLFxuXHRpbnB1dFt0eXBlPVwiZGF0ZVwiXSxcblx0aW5wdXRbdHlwZT1cIm1vbnRoXCJdLFxuXHRpbnB1dFt0eXBlPVwid2Vla1wiXSxcblx0aW5wdXRbdHlwZT1cImRhdGV0aW1lXCJdLFxuXHRpbnB1dFt0eXBlPVwiZGF0ZXRpbWUtbG9jYWxcIl0ge1xuXHRcdHdpZHRoOiAxMDAlO1xuXHRcdHBhZGRpbmc6IDEwcHggMTBweDtcblx0XHRmb250LXNpemU6IDAuOGVtO1xuXHRcdGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XG5cdFx0bGluZS1oZWlnaHQ6IDEuNGVtO1xuXHR9XG5cdGlucHV0W3R5cGU9XCJyYW5nZVwiXSB7XG5cdFx0d2lkdGg6IDEwMCU7XG5cdH1cblx0Lmxpc3QtLWJhcmUge1xuXHRcdHBhZGRpbmc6IDA7XG5cdFx0bGkge1xuXHRcdFx0bGlzdC1zdHlsZTogbm9uZTtcblx0XHR9XG5cdH1cblx0LnN3aXRjaCB7XG5cdFx0bWFyZ2luOiAtNXB4IDAgLTVweCAwcHg7XG5cdFx0LXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xuXHRcdHdpZHRoOiA2MHB4O1xuXHRcdGhlaWdodDogMjZweDtcblx0XHRiYWNrZ3JvdW5kOiAkY29sb3ItZGlzYWJsZWQ7XG5cdFx0Ym9yZGVyLXJhZGl1czogOTk5cHg7XG5cdFx0Y3Vyc29yOiBwb2ludGVyO1xuXHRcdHRyYW5zaXRpb246IGJhY2tncm91bmQgMC4zcyBlYXNlLW91dDtcblx0XHQmOmZvY3VzIHtcblx0XHRcdG91dGxpbmU6IG5vbmU7XG5cdFx0fVxuXHRcdCY6Y2hlY2tlZCB7XG5cdFx0XHRiYWNrZ3JvdW5kOiAkY29sb3ItcHJpbWFyeTtcblx0XHR9XG5cdFx0JjphZnRlciB7XG5cdFx0XHRjb250ZW50OiAnJztcblx0XHRcdGRpc3BsYXk6IGJsb2NrO1xuXHRcdFx0YmFja2dyb3VuZDogd2hpdGU7XG5cdFx0XHR3aWR0aDogMjBweDtcblx0XHRcdGhlaWdodDogMjBweDtcblx0XHRcdGJvcmRlci1yYWRpdXM6IDk5OXB4O1xuXHRcdFx0cG9zaXRpb246IHJlbGF0aXZlO1xuXHRcdFx0dG9wOiAzcHg7XG5cdFx0XHRsZWZ0OiAzcHg7XG5cdFx0XHR0cmFuc2l0aW9uOiBsZWZ0IDAuM3MgZWFzZS1vdXQ7XG5cdFx0fVxuXHRcdCY6Y2hlY2tlZDphZnRlciB7XG5cdFx0XHRsZWZ0OiAzNnB4O1xuXHRcdH1cblx0fVxuXHQucmFkaW8ge1xuXHRcdG1hcmdpbjogLTVweCAwIC01cHggMHB4O1xuXHRcdC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcblx0XHR3aWR0aDogMjZweDtcblx0XHRoZWlnaHQ6IDI2cHg7XG5cdFx0YmFja2dyb3VuZDogJGNvbG9yLWRpc2FibGVkO1xuXHRcdGJvcmRlci1yYWRpdXM6IDk5OTlweDtcblx0XHR0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kIDAuM3MgZWFzZS1vdXQ7XG5cdFx0Y3Vyc29yOiBwb2ludGVyO1xuXHRcdCY6YWZ0ZXIge1xuXHRcdFx0Y29udGVudDogJyc7XG5cdFx0XHRkaXNwbGF5OiBibG9jaztcblx0XHRcdGJhY2tncm91bmQ6IHdoaXRlO1xuXHRcdFx0d2lkdGg6IDBweDtcblx0XHRcdGhlaWdodDogMHB4O1xuXHRcdFx0Ym9yZGVyLXJhZGl1czogOTk5cHg7XG5cdFx0XHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdFx0XHR0b3A6IDEzcHg7XG5cdFx0XHRsZWZ0OiAxM3B4O1xuXHRcdFx0dHJhbnNpdGlvbjogMC4zcyBlYXNlLW91dDtcblx0XHR9XG5cdFx0JjpjaGVja2VkOmFmdGVyIHtcblx0XHRcdHdpZHRoOiAyMHB4O1xuXHRcdFx0aGVpZ2h0OiAyMHB4O1xuXHRcdFx0dG9wOiAzcHg7XG5cdFx0XHRsZWZ0OiAzcHg7XG5cdFx0fVxuXHRcdCY6aG92ZXIsXG5cdFx0JjpjaGVja2VkIHtcblx0XHRcdGJhY2tncm91bmQ6ICRjb2xvci1wcmltYXJ5O1xuXHRcdH1cblx0XHQmOmZvY3VzIHtcblx0XHRcdG91dGxpbmU6bm9uZTtcblx0XHR9XG5cdH1cblx0LnNlbGVjdC1oaWRkZW4ge1xuXHRcdGRpc3BsYXk6IG5vbmU7XG5cdFx0dmlzaWJpbGl0eTogaGlkZGVuO1xuXHRcdHBhZGRpbmctcmlnaHQ6IDEwcHg7XG5cdH1cblx0LnNlbGVjdCB7XG5cdFx0Y3Vyc29yOiBwb2ludGVyO1xuXHRcdGRpc3BsYXk6IGlubGluZS1ibG9jaztcblx0XHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdFx0Zm9udC1zaXplOiAxNnB4O1xuXHRcdGNvbG9yOiAkc2VsZWN0LWNvbG9yO1xuXHRcdHdpZHRoOiAkc2VsZWN0LXdpZHRoO1xuXHRcdGhlaWdodDogJHNlbGVjdC1oZWlnaHQ7XG5cdH1cblx0LnNlbGVjdC1zdHlsZWQge1xuXHRcdHBvc2l0aW9uOiBhYnNvbHV0ZTsgXG5cdFx0dG9wOiAwO1xuXHRcdHJpZ2h0OiAwO1xuXHRcdGJvdHRvbTogMDtcblx0XHRsZWZ0OiAwO1xuXHRcdGJhY2tncm91bmQtY29sb3I6ICRzZWxlY3QtYmFja2dyb3VuZDtcblx0XHRwYWRkaW5nOiA4cHggMTVweDtcblx0XHRAaW5jbHVkZSB0cmFuc2l0aW9uKGFsbCAwLjJzIGVhc2UtaW4pO1xuXHRcdCY6YWZ0ZXIge1xuXHRcdFx0Y29udGVudDpcIlwiO1xuXHRcdFx0d2lkdGg6IDA7XG5cdFx0XHRoZWlnaHQ6IDA7XG5cdFx0XHRib3JkZXI6IDdweCBzb2xpZCB0cmFuc3BhcmVudDtcblx0XHRcdGJvcmRlci1jb2xvcjogJHNlbGVjdC1jb2xvciB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCB0cmFuc3BhcmVudDtcblx0XHRcdHBvc2l0aW9uOiBhYnNvbHV0ZTtcblx0XHRcdHRvcDogMTZweDtcblx0XHRcdHJpZ2h0OiAxMHB4O1xuXHRcdH1cblx0XHQmOmhvdmVyIHtcblx0XHRcdGJhY2tncm91bmQtY29sb3I6IGRhcmtlbigkc2VsZWN0LWJhY2tncm91bmQsIDIpO1xuXHRcdH1cblx0XHQmOmFjdGl2ZSxcblx0XHQmLmFjdGl2ZSB7XG5cdFx0XHRiYWNrZ3JvdW5kLWNvbG9yOiBkYXJrZW4oJHNlbGVjdC1iYWNrZ3JvdW5kLCA1KTtcblx0XHRcdCY6YWZ0ZXIge1xuXHRcdFx0XHR0b3A6IDlweDtcblx0XHRcdFx0Ym9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCAkc2VsZWN0LWNvbG9yIHRyYW5zcGFyZW50O1xuXHRcdFx0fVxuXHRcdH1cblx0fVxuXHQuc2VsZWN0LW9wdGlvbnMge1xuXHRcdGRpc3BsYXk6IG5vbmU7IFxuXHRcdHBvc2l0aW9uOiBhYnNvbHV0ZTtcblx0XHR0b3A6IDEwMCU7XG5cdFx0cmlnaHQ6IDA7XG5cdFx0bGVmdDogMDtcblx0XHR6LWluZGV4OiA5OTk7XG5cdFx0bWFyZ2luOiAwO1xuXHRcdHBhZGRpbmc6IDA7XG5cdFx0bGlzdC1zdHlsZTogbm9uZTtcblx0XHRiYWNrZ3JvdW5kLWNvbG9yOiBkYXJrZW4oJHNlbGVjdC1iYWNrZ3JvdW5kLCA1KTtcblx0XHRsaSB7XG5cdFx0XHRtYXJnaW46IDA7XG5cdFx0XHRwYWRkaW5nOiAxMnB4IDA7XG5cdFx0XHR0ZXh0LWluZGVudDogMTVweDtcblx0XHRcdGJvcmRlci10b3A6IDFweCBzb2xpZCBkYXJrZW4oJHNlbGVjdC1iYWNrZ3JvdW5kLCAxMCk7XG5cdFx0XHRAaW5jbHVkZSB0cmFuc2l0aW9uKGFsbCAwLjE1cyBlYXNlLWluKTtcblx0XHRcdCY6aG92ZXIge1xuXHRcdFx0XHRiYWNrZ3JvdW5kOiBkYXJrZW4oJHNlbGVjdC1iYWNrZ3JvdW5kLCAyMCk7XG5cdFx0XHR9XG5cdFx0XHQmW3JlbD1cImhpZGVcIl0ge1xuXHRcdFx0XHRkaXNwbGF5OiBub25lO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxuXHRcbn1cblxuXG4vKiBJbWFnZSBSZXNwb25zaXZlICovXG5cbi5pciB7XG5cdG1heC13aWR0aDogMTAwJTtcblx0aGVpZ2h0OiBhdXRvO1xufVxuXG4uYnV0dG9uIHtcblx0YmFja2dyb3VuZDogJGNvbG9yLXByaW1hcnk7XG5cdGJvcmRlcjogMCBub25lO1xuXHRjb2xvcjogI2ZmZjtcblx0Zm9udC1zaXplOiAwLjllbTtcblx0cGFkZGluZzogOHB4IDE1cHg7XG5cdGN1cnNvcjogcG9pbnRlcjtcblx0Jjpob3ZlciB7XG5cdFx0YmFja2dyb3VuZDogZGFya2VuKCRjb2xvci1wcmltYXJ5LCAyMCk7XG5cdH1cbn1cblxuYnV0dG9uLFxuaW5wdXRbdHlwZT1cInN1Ym1pdFwiXSxcbmlucHV0W3R5cGU9XCJyZXNldFwiXSB7XG5cdEBleHRlbmQgLmJ1dHRvbjtcbn1cblxuQGluY2x1ZGUgYnJlYWtwb2ludCh0YWJsZXQpIHtcblxuXHRuYXYuYmFzaWMge1xuXHRcdHBvc2l0aW9uOiBmaXhlZDtcblx0XHR6LWluZGV4OiAxMDA7XG5cdFx0dG9wOiAwO1xuXHRcdGxlZnQ6IDA7XG5cdFx0d2lkdGg6IDEwMCU7XG5cdFx0YmFja2dyb3VuZDogIzIyMjtcblx0XHR1bCB7XG5cdFx0XHRtYXgtd2lkdGg6IDc3MHB4O1xuXHRcdFx0bWFyZ2luOiAwIGF1dG87XG5cdFx0XHRAaW5jbHVkZSBjbGVhcmZpeDtcblx0XHRcdHBhZGRpbmc6IDA7XG5cdFx0XHRsaSB7XG5cdFx0XHRcdGZsb2F0OiBsZWZ0O1xuXHRcdFx0XHRhIHtcblx0XHRcdFx0XHRkaXNwbGF5OiBibG9jaztcblx0XHRcdFx0XHRwYWRkaW5nOiAxMHB4O1xuXHRcdFx0XHRcdGNvbG9yOiAjZmZmO1xuXHRcdFx0XHRcdGZvbnQtd2VpZ2h0OiAxMDA7XG5cdFx0XHRcdFx0Zm9udC1zaXplOiAwLjllbTtcblx0XHRcdFx0fVxuXHRcdFx0XHR1bCB7XG5cdFx0XHRcdFx0ZGlzcGxheTogbm9uZTtcblx0XHRcdFx0XHRsaSB7XG5cdFx0XHRcdFx0XHRmbG9hdDogbm9uZTtcblx0XHRcdFx0XHRcdGEge1xuXHRcdFx0XHRcdFx0XHRjb2xvcjogI2FhYTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdFx0Jjpob3ZlciB7XG5cdFx0XHRcdFx0dWwge1xuXHRcdFx0XHRcdFx0ZGlzcGxheTogYmxvY2s7XG5cdFx0XHRcdFx0XHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdFx0XHRcdFx0XHR6LWluZGV4OiAxMDA7XG5cdFx0XHRcdFx0XHRiYWNrZ3JvdW5kOiAjMjIyO1xuXHRcdFx0XHRcdFx0bGkge1xuXHRcdFx0XHRcdFx0XHRhIHtcblx0XHRcdFx0XHRcdFx0XHQmOmhvdmVyIHtcblx0XHRcdFx0XHRcdFx0XHRcdGNvbG9yOiAjZmZmO1xuXHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG59IiwiQG1peGluIGNsZWFyZml4IHtcbiAgICB6b29tOjE7XG4gICAgJjpiZWZvcmUsICY6YWZ0ZXIge1xuICAgICAgICBjb250ZW50OiBcIlxcMDAyMFwiOyBcbiAgICAgICAgZGlzcGxheTogYmxvY2s7IFxuICAgICAgICBoZWlnaHQ6IDA7IFxuICAgICAgICBvdmVyZmxvdzogaGlkZGVuOyBcbiAgICB9XG4gICAgJjphZnRlciB7XG4gICAgICAgIGNsZWFyOiBib3RoO1xuICAgIH1cbn1cblxuQG1peGluIGJhY2tncm91bmQtZ3JhZGllbnQoJHN0YXJ0Q29sb3I6ICMzQzNDM0MsICRlbmRDb2xvcjogIzk5OTk5OSkge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICRzdGFydENvbG9yO1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IC13ZWJraXQtZ3JhZGllbnQobGluZWFyLCBsZWZ0IHRvcCwgbGVmdCBib3R0b20sIGZyb20oJHN0YXJ0Q29sb3IpLCB0bygkZW5kQ29sb3IpKTtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiAtd2Via2l0LWxpbmVhci1ncmFkaWVudCh0b3AsICRzdGFydENvbG9yLCAkZW5kQ29sb3IpO1xuICAgIGJhY2tncm91bmQtaW1hZ2U6ICAgIC1tb3otbGluZWFyLWdyYWRpZW50KHRvcCwgJHN0YXJ0Q29sb3IsICRlbmRDb2xvcik7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogICAgIC1tcy1saW5lYXItZ3JhZGllbnQodG9wLCAkc3RhcnRDb2xvciwgJGVuZENvbG9yKTtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiAgICAgIC1vLWxpbmVhci1ncmFkaWVudCh0b3AsICRzdGFydENvbG9yLCAkZW5kQ29sb3IpO1xuICAgIGJhY2tncm91bmQtaW1hZ2U6ICAgICAgICAgbGluZWFyLWdyYWRpZW50KHRvcCwgJHN0YXJ0Q29sb3IsICRlbmRDb2xvcik7XG4gICAgZmlsdGVyOiAgICAgICAgICAgIHByb2dpZDpEWEltYWdlVHJhbnNmb3JtLk1pY3Jvc29mdC5ncmFkaWVudChzdGFydENvbG9yU3RyPScjeyRzdGFydENvbG9yfScsIGVuZENvbG9yU3RyPScjeyRlbmRDb2xvcn0nKTtcbn1cblxuQG1peGluIGJhY2tncm91bmQtc2l6ZSgkd2lkdGg6IDEwMCUsICRoZWlnaHQ6IDEwMCUpIHtcbiAgICAgLW1vei1iYWNrZ3JvdW5kLXNpemU6ICR3aWR0aCAkaGVpZ2h0O1xuICAtd2Via2l0LWJhY2tncm91bmQtc2l6ZTogJHdpZHRoICRoZWlnaHQ7XG4gICAgICAgICAgYmFja2dyb3VuZC1zaXplOiAkd2lkdGggJGhlaWdodDtcbn1cblxuQG1peGluIGJvcmRlci1yYWRpdXMoJHJhZGl1czogNXB4KSB7XG4gICAgLW1vei1ib3JkZXItcmFkaXVzOiAgICAkcmFkaXVzO1xuICAgIC13ZWJraXQtYm9yZGVyLXJhZGl1czogJHJhZGl1cztcbiAgICBib3JkZXItcmFkaXVzOiAgICAgICAgICRyYWRpdXM7XG59XG5cbkBtaXhpbiBib3JkZXItcmFkaXVzLXNlcGFyYXRlKCR0b3BMZWZ0UmFkaXVzOiA1cHgsICR0b3BSaWdodFJhZGl1czogNXB4LCAkYm90dG9tTGVmdFJhZGl1czogNXB4LCAkYm90dG9tUmlnaHRSYWRpdXM6IDVweCkge1xuICAgIC13ZWJraXQtYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogICAgICR0b3BMZWZ0UmFkaXVzO1xuICAgIC13ZWJraXQtYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6ICAgICR0b3BSaWdodFJhZGl1cztcbiAgICAtd2Via2l0LWJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAkYm90dG9tUmlnaHRSYWRpdXM7XG4gICAgLXdlYmtpdC1ib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiAgJGJvdHRvbUxlZnRSYWRpdXM7XG5cbiAgICAtbW96LWJvcmRlci1yYWRpdXMtdG9wbGVmdDogICAgICR0b3BMZWZ0UmFkaXVzO1xuICAgIC1tb3otYm9yZGVyLXJhZGl1cy10b3ByaWdodDogICAgJHRvcFJpZ2h0UmFkaXVzO1xuICAgIC1tb3otYm9yZGVyLXJhZGl1cy1ib3R0b21yaWdodDogJGJvdHRvbVJpZ2h0UmFkaXVzO1xuICAgIC1tb3otYm9yZGVyLXJhZGl1cy1ib3R0b21sZWZ0OiAgJGJvdHRvbUxlZnRSYWRpdXM7XG5cbiAgICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAgICAgJHRvcExlZnRSYWRpdXM7XG4gICAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6ICAgICR0b3BSaWdodFJhZGl1cztcbiAgICBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogJGJvdHRvbVJpZ2h0UmFkaXVzO1xuICAgIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6ICAkYm90dG9tTGVmdFJhZGl1cztcbn1cblxuQG1peGluIGJveCgkb3JpZW50OiBob3Jpem9udGFsLCAkcGFjazogY2VudGVyLCAkYWxpZ246IGNlbnRlcikge1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIGRpc3BsYXk6IC1tb3otYm94O1xuICAgIGRpc3BsYXk6IGJveDtcblxuICAgIC13ZWJraXQtYm94LW9yaWVudDogJG9yaWVudDtcbiAgICAtbW96LWJveC1vcmllbnQ6ICAgICRvcmllbnQ7XG4gICAgYm94LW9yaWVudDogICAgICAgICAkb3JpZW50O1xuXG4gICAgLXdlYmtpdC1ib3gtcGFjazogJHBhY2s7XG4gICAgLW1vei1ib3gtcGFjazogICAgJHBhY2s7XG4gICAgYm94LXBhY2s6ICAgICAgICAgJHBhY2s7XG5cbiAgICAtd2Via2l0LWJveC1hbGlnbjogJGFsaWduO1xuICAgIC1tb3otYm94LWFsaWduOiAgICAkYWxpZ247XG4gICAgYm94LWFsaWduOiAgICAgICAgICRhbGlnbjtcbn1cblxuQG1peGluIGJveC1yZ2JhKCRyOiA2MCwgJGc6IDMsICRiOiAxMiwgJG9wYWNpdHk6IDAuMjMsICRjb2xvcjogIzNDM0MzQykge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgkciwgJGcsICRiLCAkb3BhY2l0eSk7XG4gICAgICAgICAgICBmaWx0ZXI6IHByb2dpZDpEWEltYWdlVHJhbnNmb3JtLk1pY3Jvc29mdC5ncmFkaWVudChzdGFydENvbG9yc3RyPScjeyRjb2xvcn0nLGVuZENvbG9yc3RyPScjeyRjb2xvcn0nKTtcbiAgICAgICAgICAgIHpvb206ICAgMTtcbn1cblxuQG1peGluIGJveC1zaGFkb3coJHg6IDJweCwgJHk6IDJweCwgJGJsdXI6IDVweCwgJGNvbG9yOiByZ2JhKDAsMCwwLC40KSwgJGluc2V0OiBcIlwiKSB7XG4gIEBpZiAoJGluc2V0ICE9IFwiXCIpIHtcbiAgICAtd2Via2l0LWJveC1zaGFkb3c6ICRpbnNldCAkeCAkeSAkYmx1ciAkY29sb3I7XG4gICAgLW1vei1ib3gtc2hhZG93OiAgICAkaW5zZXQgJHggJHkgJGJsdXIgJGNvbG9yO1xuICAgIGJveC1zaGFkb3c6ICAgICAgICAgJGluc2V0ICR4ICR5ICRibHVyICRjb2xvcjtcbiAgfSBAZWxzZSB7XG4gICAgLXdlYmtpdC1ib3gtc2hhZG93OiAkeCAkeSAkYmx1ciAkY29sb3I7XG4gICAgLW1vei1ib3gtc2hhZG93OiAgICAkeCAkeSAkYmx1ciAkY29sb3I7XG4gICAgYm94LXNoYWRvdzogICAgICAgICAkeCAkeSAkYmx1ciAkY29sb3I7XG4gIH1cbn1cblxuQG1peGluIGJveC1zaXppbmcoJHR5cGU6IGJvcmRlci1ib3gpIHtcbiAgICAtd2Via2l0LWJveC1zaXppbmc6ICAgJHR5cGU7XG4gICAgLW1vei1ib3gtc2l6aW5nOiAgICAgICR0eXBlO1xuICAgIGJveC1zaXppbmc6ICAgICAgICAgICAkdHlwZTtcbn1cblxuQG1peGluIGNvbHVtbnMoJGNvdW50OiAzLCAkZ2FwOiAxMCkge1xuICAgIC13ZWJraXQtY29sdW1uLWNvdW50OiAkY291bnQ7XG4gICAgLW1vei1jb2x1bW4tY291bnQ6ICAgICRjb3VudDtcbiAgICBjb2x1bW4tY291bnQ6ICAgICAgICAgJGNvdW50O1xuXG4gICAgLXdlYmtpdC1jb2x1bW4tZ2FwOiAgICRnYXA7XG4gICAgLW1vei1jb2x1bW4tZ2FwOiAgICAgICRnYXA7XG4gICAgY29sdW1uLWdhcDogICAgICAgICAgICRnYXA7XG59XG5cbkBtaXhpbiBkb3VibGUtYm9yZGVycygkY29sb3JPbmU6ICMzQzNDM0MsICRjb2xvclR3bzogIzk5OTk5OSwgJHJhZGl1czogMCkge1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICRjb2xvck9uZTtcblxuICAgIC13ZWJraXQtYm94LXNoYWRvdzogMCAwIDAgMXB4ICRjb2xvclR3bztcbiAgICAtbW96LWJveC1zaGFkb3c6ICAgIDAgMCAwIDFweCAkY29sb3JUd287XG4gICAgYm94LXNoYWRvdzogICAgICAgICAwIDAgMCAxcHggJGNvbG9yVHdvO1xuXG4gICAgQGluY2x1ZGUgYm9yZGVyLXJhZGl1cyggJHJhZGl1cyApO1xufVxuXG5AbWl4aW4gZmxleCgkdmFsdWU6IDEpIHtcbiAgICAtd2Via2l0LWJveC1mbGV4OiAkdmFsdWU7XG4gICAgLW1vei1ib3gtZmxleDogICAgJHZhbHVlO1xuICAgIGJveC1mbGV4OiAgICAgICAgICR2YWx1ZTtcbn1cblxuQG1peGluIGZsaXAoJHNjYWxlWDogLTEpIHtcbiAgICAtbW96LXRyYW5zZm9ybTogICAgc2NhbGVYKCRzY2FsZVgpO1xuICAgIC1vLXRyYW5zZm9ybTogICAgICBzY2FsZVgoJHNjYWxlWCk7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlWCgkc2NhbGVYKTtcbiAgICB0cmFuc2Zvcm06ICAgICAgICAgc2NhbGVYKCRzY2FsZVgpO1xuICAgIGZpbHRlcjogICAgICAgICAgICBGbGlwSDtcbiAgICAtbXMtZmlsdGVyOiAgICAgICAgXCJGbGlwSFwiO1xufVxuXG5AbWl4aW4gZm9udC1mYWNlKCRzdHlsZS1uYW1lLCAkZmlsZSwgJGZhbWlseSwgJGNhdGVnb3J5OlwiXCIpIHtcbiAgJGZpbGVwYXRoOiBcIi4uL2ZvbnRzL1wiICsgJGZhbWlseSArIFwiL1wiICsgJGZpbGU7XG4gIEBmb250LWZhY2Uge1xuICAgIGZvbnQtZmFtaWx5OiAjeyRzdHlsZS1uYW1lfTtcbiAgICBzcmM6IHVybCgkZmlsZXBhdGggKyBcIi5lb3RcIik7XG4gICAgc3JjOiB1cmwoJGZpbGVwYXRoICsgXCIuZW90PyNpZWZpeFwiKSBmb3JtYXQoXCJlbWJlZGRlZC1vcGVudHlwZVwiKSwgdXJsKCRmaWxlcGF0aCArIFwiLndvZmZcIikgZm9ybWF0KFwid29mZlwiKSwgdXJsKCRmaWxlcGF0aCArIFwiLnR0ZlwiKSBmb3JtYXQoXCJ0cnVldHlwZVwiKSwgdXJsKCRmaWxlcGF0aCArIFwiLnN2ZyNcIiArICRzdHlsZS1uYW1lICsgXCJcIikgZm9ybWF0KFwic3ZnXCIpO1xuICB9XG5cbiAgJSN7JHN0eWxlLW5hbWV9IHtcbiAgICBmb250OiB7XG4gICAgICBAaWYgJGNhdGVnb3J5ICE9IFwiXCIge1xuICAgICAgICBmYW1pbHk6ICN7JHN0eWxlLW5hbWV9LCAjeyRjYXRlZ29yeX07XG4gICAgICB9XG4gICAgICBAZWxzZSB7XG4gICAgICAgIGZhbWlseTogI3skc3R5bGUtbmFtZX07XG4gICAgICB9XG4gICAgICB3ZWlnaHQ6IG5vcm1hbDtcbiAgICB9O1xuICB9XG59XG5cbkBtaXhpbiBvdXRsaW5lLXJhZGl1cygkcmFkaXVzOiA1cHgpIHtcbiAgICAtd2Via2l0LW91dGxpbmUtcmFkaXVzOiAkcmFkaXVzO1xuICAgIC1tb3otb3V0bGluZS1yYWRpdXM6ICAgICRyYWRpdXM7XG4gICAgb3V0bGluZS1yYWRpdXM6ICAgICAgICAgJHJhZGl1cztcbn1cblxuQG1peGluIHJlc2l6ZSgkZGlyZWN0aW9uOiBib3RoKSB7XG4gICAgLXdlYmtpdC1yZXNpemU6ICRkaXJlY3Rpb247XG4gICAgLW1vei1yZXNpemU6ICAgICRkaXJlY3Rpb247XG4gICAgcmVzaXplOiAgICAgICAgICRkaXJlY3Rpb247XG59XG5cbkBtaXhpbiByb3RhdGUoJGRlZzogMCwgJG0xMTogMCwgJG0xMjogMCwgJG0yMTogMCwgJG0yMjogMCkge1xuICAgICAtbW96LXRyYW5zZm9ybTogcm90YXRlKCRkZWcgKyBkZWcpO1xuICAgICAgIC1vLXRyYW5zZm9ybTogcm90YXRlKCRkZWcgKyBkZWcpO1xuICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKCRkZWcgKyBkZWcpO1xuICAgICAgLW1zLXRyYW5zZm9ybTogcm90YXRlKCRkZWcgKyBkZWcpO1xuICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKCRkZWcgKyBkZWcpO1xuICAgICAgICAgICAgIGZpbHRlcjogcHJvZ2lkOkRYSW1hZ2VUcmFuc2Zvcm0uTWljcm9zb2Z0Lk1hdHJpeChcbiAgICAgICAgICAgICAgICAgICAgIE0xMT0jeyRtMTF9LCBNMTI9I3skbTEyfSwgTTIxPSN7JG0yMX0sIE0yMj0jeyRtMjJ9LCBzaXppbmdNZXRob2Q9J2F1dG8gZXhwYW5kJyk7XG4gICAgICAgICAgICAgICB6b29tOiAxO1xufVxuXG5AbWl4aW4gdGV4dC1zaGFkb3coJHg6IDJweCwgJHk6IDJweCwgJGJsdXI6IDVweCwgJGNvbG9yOiByZ2JhKDAsMCwwLC40KSkge1xuICAgIHRleHQtc2hhZG93OiAkeCAkeSAkYmx1ciAkY29sb3I7XG59XG5cbkBtaXhpbiB0cmFuc2Zvcm0oJHBhcmFtcykge1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiAkcGFyYW1zO1xuICAgIC1tb3otdHJhbnNmb3JtOiAgICAkcGFyYW1zO1xuICAgIHRyYW5zZm9ybTogICAgICAgICAkcGFyYW1zO1xufVxuXG5AbWl4aW4gdHJhbnNpdGlvbigkZGVjbGFyYXRpb25zLi4uKSB7XG4gIEBlYWNoICRwcmVmaXggaW4gJy13ZWJraXQtJywgJy1tb3otJywgJy1tcy0nLCAnLW8tJywgJycge1xuICAgICN7JHByZWZpeH10cmFuc2l0aW9uOiAkZGVjbGFyYXRpb25zO1xuICB9XG59XG5cbkBtaXhpbiB0cmlwbGUtYm9yZGVycygkY29sb3JPbmU6ICMzQzNDM0MsICRjb2xvclR3bzogIzk5OTk5OSwgJGNvbG9yVGhyZWU6ICMwMDAwMDAsICRyYWRpdXM6IDApIHtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAkY29sb3JPbmU7XG5cbiAgICBAaW5jbHVkZSBib3JkZXItcmFkaXVzKCRyYWRpdXMpO1xuXG4gICAgLXdlYmtpdC1ib3gtc2hhZG93OiAwIDAgMCAxcHggJGNvbG9yVHdvLCAwIDAgMCAycHggJGNvbG9yVGhyZWU7XG4gICAgLW1vei1ib3gtc2hhZG93OiAgICAwIDAgMCAxcHggJGNvbG9yVHdvLCAwIDAgMCAycHggJGNvbG9yVGhyZWU7XG4gICAgYm94LXNoYWRvdzogICAgICAgICAwIDAgMCAxcHggJGNvbG9yVHdvLCAwIDAgMCAycHggJGNvbG9yVGhyZWU7XG59XG4iLCJodG1sIHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBib3JkZXI6IDA7IH1cblxuYm9keSwgZGl2LCBzcGFuLCBvYmplY3QsIGlmcmFtZSwgaDEsIGgyLCBoMywgaDQsIGg1LCBoNiwgcCwgYmxvY2txdW90ZSwgcHJlLCBhLCBhYmJyLCBhY3JvbnltLCBhZGRyZXNzLCBjb2RlLCBkZWwsIGRmbiwgZW0sIGltZywgcSwgZGwsIGR0LCBkZCwgb2wsIHVsLCBsaSwgZmllbGRzZXQsIGZvcm0sIGxhYmVsLCBsZWdlbmQsIHRhYmxlLCBjYXB0aW9uLCB0Ym9keSwgdGZvb3QsIHRoZWFkLCB0ciwgdGgsIHRkLCBhcnRpY2xlLCBhc2lkZSwgZGlhbG9nLCBmaWd1cmUsIGZvb3RlciwgaGVhZGVyLCBoZ3JvdXAsIG5hdiwgc2VjdGlvbiB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgYm9yZGVyOiAwO1xuICBmb250LXdlaWdodDogaW5oZXJpdDtcbiAgZm9udC1zdHlsZTogaW5oZXJpdDtcbiAgZm9udC1zaXplOiAxMDAlO1xuICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyB9XG5cbmFydGljbGUsIGFzaWRlLCBkaWFsb2csIGZpZ3VyZSwgZm9vdGVyLCBoZWFkZXIsIGhncm91cCwgbmF2LCBzZWN0aW9uIHtcbiAgZGlzcGxheTogYmxvY2s7IH1cblxuYm9keSB7XG4gIGxpbmUtaGVpZ2h0OiAxLjU7XG4gIGJhY2tncm91bmQ6IHdoaXRlOyB9XG5cbnRhYmxlIHtcbiAgYm9yZGVyLWNvbGxhcHNlOiBzZXBhcmF0ZTtcbiAgYm9yZGVyLXNwYWNpbmc6IDA7IH1cblxuY2FwdGlvbiwgdGgsIHRkIHtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZmxvYXQ6IG5vbmUgIWltcG9ydGFudDsgfVxuXG50YWJsZSwgdGgsIHRkIHtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTsgfVxuXG5ibG9ja3F1b3RlIGJlZm9yZSwgYmxvY2txdW90ZSBhZnRlciwgcSBiZWZvcmUsIHEgYWZ0ZXIge1xuICBjb250ZW50OiAnJzsgfVxuXG5hIGltZyB7XG4gIGJvcmRlcjogbm9uZTsgfVxuXG5iLCBpIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuXG4qIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgb3V0bGluZTogMCBub25lOyB9XG5cbnAge1xuICBtYXJnaW46IDAgMCAxNXB4OyB9XG5cbmEge1xuICBjb2xvcjogYmx1ZTtcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7IH1cbiAgYTpob3ZlciB7XG4gICAgY29sb3I6ICMzMzM7IH1cblxubmF2IHVsIGxpIHtcbiAgbGlzdC1zdHlsZTogbm9uZTsgfVxuICBuYXYgdWwgbGkgYSB7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB9XG5cbnVsLCBvbCB7XG4gIHBhZGRpbmc6IDAgMCAwIDI4cHg7IH1cblxuaDEsIGgyLCBoMywgaDQsIGg1LCBoNiB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBtYXJnaW46IDEwcHggMDsgfVxuXG5oMSB7XG4gIGZvbnQtc2l6ZTogMS43NWVtO1xuICBtYXJnaW46IDE1cHggMDsgfVxuXG5oMiB7XG4gIGZvbnQtc2l6ZTogMS40ZW07XG4gIG1hcmdpbjogMTJweCAwOyB9XG5cbmgzIHtcbiAgZm9udC1zaXplOiAxLjNlbTsgfVxuXG5oNCB7XG4gIGZvbnQtc2l6ZTogMS4yZW07IH1cblxuaDUge1xuICBmb250LXNpemU6IDEuMWVtOyB9XG5cbmg2IHtcbiAgZm9udC1zaXplOiAxZW07IH1cblxuYmxvY2txdW90ZSB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbiAgYm9yZGVyLWxlZnQ6IDVweCBzb2xpZCAjZWVlO1xuICBwYWRkaW5nLWxlZnQ6IDI1cHg7XG4gIG1hcmdpbjogMTBweCAwOyB9XG5cbnRhYmxlIHtcbiAgd2lkdGg6IDEwMCU7IH1cbiAgdGFibGUgY2FwdGlvbiB7XG4gICAgZm9udC1zaXplOiAwLjhlbTsgfVxuICB0YWJsZSB0aGVhZCB0aCB7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7IH1cblxuaHIge1xuICBib3JkZXI6IDA7XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCAjY2NjOyB9XG5cbmFydGljbGUge1xuICBtYXJnaW46IDEwcHggMDsgfVxuXG5mb3JtIHAge1xuICBtYXJnaW46IDAgMCAxMHB4OyB9XG5mb3JtIGxhYmVsIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBmb250LXNpemU6IDAuOGVtOyB9XG5mb3JtIHRleHRhcmVhLCBmb3JtIGlucHV0W3R5cGU9XCJ0ZXh0XCJdLCBmb3JtIGlucHV0W3R5cGU9XCJzZWFyY2hcIl0sIGZvcm0gaW5wdXRbdHlwZT1cInBhc3N3b3JkXCJdLCBmb3JtIGlucHV0W3R5cGU9XCJ1cmxcIl0sIGZvcm0gaW5wdXRbdHlwZT1cImVtYWlsXCJdLCBmb3JtIGlucHV0W3R5cGU9XCJudW1iZXJcIl0sIGZvcm0gaW5wdXRbdHlwZT1cImRhdGVcIl0sIGZvcm0gaW5wdXRbdHlwZT1cIm1vbnRoXCJdLCBmb3JtIGlucHV0W3R5cGU9XCJ3ZWVrXCJdLCBmb3JtIGlucHV0W3R5cGU9XCJkYXRldGltZVwiXSwgZm9ybSBpbnB1dFt0eXBlPVwiZGF0ZXRpbWUtbG9jYWxcIl0ge1xuICB3aWR0aDogMTAwJTtcbiAgcGFkZGluZzogMTBweCAxMHB4O1xuICBmb250LXNpemU6IDAuOGVtO1xuICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xuICBsaW5lLWhlaWdodDogMS40ZW07IH1cbmZvcm0gaW5wdXRbdHlwZT1cInJhbmdlXCJdIHtcbiAgd2lkdGg6IDEwMCU7IH1cbmZvcm0gLmxpc3QtLWJhcmUge1xuICBwYWRkaW5nOiAwOyB9XG4gIGZvcm0gLmxpc3QtLWJhcmUgbGkge1xuICAgIGxpc3Qtc3R5bGU6IG5vbmU7IH1cbmZvcm0gLnN3aXRjaCB7XG4gIG1hcmdpbjogLTVweCAwIC01cHggMHB4O1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG4gIHdpZHRoOiA2MHB4O1xuICBoZWlnaHQ6IDI2cHg7XG4gIGJhY2tncm91bmQ6ICM5OTk7XG4gIGJvcmRlci1yYWRpdXM6IDk5OXB4O1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQgMC4zcyBlYXNlLW91dDsgfVxuICBmb3JtIC5zd2l0Y2g6Zm9jdXMge1xuICAgIG91dGxpbmU6IG5vbmU7IH1cbiAgZm9ybSAuc3dpdGNoOmNoZWNrZWQge1xuICAgIGJhY2tncm91bmQ6ICMzMzM7IH1cbiAgZm9ybSAuc3dpdGNoOmFmdGVyIHtcbiAgICBjb250ZW50OiAnJztcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICB3aWR0aDogMjBweDtcbiAgICBoZWlnaHQ6IDIwcHg7XG4gICAgYm9yZGVyLXJhZGl1czogOTk5cHg7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHRvcDogM3B4O1xuICAgIGxlZnQ6IDNweDtcbiAgICB0cmFuc2l0aW9uOiBsZWZ0IDAuM3MgZWFzZS1vdXQ7IH1cbiAgZm9ybSAuc3dpdGNoOmNoZWNrZWQ6YWZ0ZXIge1xuICAgIGxlZnQ6IDM2cHg7IH1cbmZvcm0gLnJhZGlvIHtcbiAgbWFyZ2luOiAtNXB4IDAgLTVweCAwcHg7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbiAgd2lkdGg6IDI2cHg7XG4gIGhlaWdodDogMjZweDtcbiAgYmFja2dyb3VuZDogIzk5OTtcbiAgYm9yZGVyLXJhZGl1czogOTk5OXB4O1xuICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kIDAuM3MgZWFzZS1vdXQ7XG4gIGN1cnNvcjogcG9pbnRlcjsgfVxuICBmb3JtIC5yYWRpbzphZnRlciB7XG4gICAgY29udGVudDogJyc7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgYmFja2dyb3VuZDogd2hpdGU7XG4gICAgd2lkdGg6IDBweDtcbiAgICBoZWlnaHQ6IDBweDtcbiAgICBib3JkZXItcmFkaXVzOiA5OTlweDtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgdG9wOiAxM3B4O1xuICAgIGxlZnQ6IDEzcHg7XG4gICAgdHJhbnNpdGlvbjogMC4zcyBlYXNlLW91dDsgfVxuICBmb3JtIC5yYWRpbzpjaGVja2VkOmFmdGVyIHtcbiAgICB3aWR0aDogMjBweDtcbiAgICBoZWlnaHQ6IDIwcHg7XG4gICAgdG9wOiAzcHg7XG4gICAgbGVmdDogM3B4OyB9XG4gIGZvcm0gLnJhZGlvOmhvdmVyLCBmb3JtIC5yYWRpbzpjaGVja2VkIHtcbiAgICBiYWNrZ3JvdW5kOiAjMzMzOyB9XG4gIGZvcm0gLnJhZGlvOmZvY3VzIHtcbiAgICBvdXRsaW5lOiBub25lOyB9XG5mb3JtIC5zZWxlY3QtaGlkZGVuIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgdmlzaWJpbGl0eTogaGlkZGVuO1xuICBwYWRkaW5nLXJpZ2h0OiAxMHB4OyB9XG5mb3JtIC5zZWxlY3Qge1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGNvbG9yOiAjZmZmO1xuICB3aWR0aDogMjIwcHg7XG4gIGhlaWdodDogNDBweDsgfVxuZm9ybSAuc2VsZWN0LXN0eWxlZCB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICByaWdodDogMDtcbiAgYm90dG9tOiAwO1xuICBsZWZ0OiAwO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzMzO1xuICBwYWRkaW5nOiA4cHggMTVweDtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBhbGwgMC4ycyBlYXNlLWluO1xuICAtbW96LXRyYW5zaXRpb246IGFsbCAwLjJzIGVhc2UtaW47XG4gIC1tcy10cmFuc2l0aW9uOiBhbGwgMC4ycyBlYXNlLWluO1xuICAtby10cmFuc2l0aW9uOiBhbGwgMC4ycyBlYXNlLWluO1xuICB0cmFuc2l0aW9uOiBhbGwgMC4ycyBlYXNlLWluOyB9XG4gIGZvcm0gLnNlbGVjdC1zdHlsZWQ6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgd2lkdGg6IDA7XG4gICAgaGVpZ2h0OiAwO1xuICAgIGJvcmRlcjogN3B4IHNvbGlkIHRyYW5zcGFyZW50O1xuICAgIGJvcmRlci1jb2xvcjogI2ZmZiB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCB0cmFuc3BhcmVudDtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAxNnB4O1xuICAgIHJpZ2h0OiAxMHB4OyB9XG4gIGZvcm0gLnNlbGVjdC1zdHlsZWQ6aG92ZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMyZTJlMmU7IH1cbiAgZm9ybSAuc2VsZWN0LXN0eWxlZDphY3RpdmUsIGZvcm0gLnNlbGVjdC1zdHlsZWQuYWN0aXZlIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjYyNjI2OyB9XG4gICAgZm9ybSAuc2VsZWN0LXN0eWxlZDphY3RpdmU6YWZ0ZXIsIGZvcm0gLnNlbGVjdC1zdHlsZWQuYWN0aXZlOmFmdGVyIHtcbiAgICAgIHRvcDogOXB4O1xuICAgICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCAjZmZmIHRyYW5zcGFyZW50OyB9XG5mb3JtIC5zZWxlY3Qtb3B0aW9ucyB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAxMDAlO1xuICByaWdodDogMDtcbiAgbGVmdDogMDtcbiAgei1pbmRleDogOTk5O1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIGJhY2tncm91bmQtY29sb3I6ICMyNjI2MjY7IH1cbiAgZm9ybSAuc2VsZWN0LW9wdGlvbnMgbGkge1xuICAgIG1hcmdpbjogMDtcbiAgICBwYWRkaW5nOiAxMnB4IDA7XG4gICAgdGV4dC1pbmRlbnQ6IDE1cHg7XG4gICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICMxYTFhMWE7XG4gICAgLXdlYmtpdC10cmFuc2l0aW9uOiBhbGwgMC4xNXMgZWFzZS1pbjtcbiAgICAtbW96LXRyYW5zaXRpb246IGFsbCAwLjE1cyBlYXNlLWluO1xuICAgIC1tcy10cmFuc2l0aW9uOiBhbGwgMC4xNXMgZWFzZS1pbjtcbiAgICAtby10cmFuc2l0aW9uOiBhbGwgMC4xNXMgZWFzZS1pbjtcbiAgICB0cmFuc2l0aW9uOiBhbGwgMC4xNXMgZWFzZS1pbjsgfVxuICAgIGZvcm0gLnNlbGVjdC1vcHRpb25zIGxpOmhvdmVyIHtcbiAgICAgIGJhY2tncm91bmQ6IGJsYWNrOyB9XG4gICAgZm9ybSAuc2VsZWN0LW9wdGlvbnMgbGlbcmVsPVwiaGlkZVwiXSB7XG4gICAgICBkaXNwbGF5OiBub25lOyB9XG5cbi8qIEltYWdlIFJlc3BvbnNpdmUgKi9cbi5pciB7XG4gIG1heC13aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiBhdXRvOyB9XG5cbi5idXR0b24sIGJ1dHRvbiwgaW5wdXRbdHlwZT1cInN1Ym1pdFwiXSwgaW5wdXRbdHlwZT1cInJlc2V0XCJdIHtcbiAgYmFja2dyb3VuZDogIzMzMztcbiAgYm9yZGVyOiAwIG5vbmU7XG4gIGNvbG9yOiAjZmZmO1xuICBmb250LXNpemU6IDAuOWVtO1xuICBwYWRkaW5nOiA4cHggMTVweDtcbiAgY3Vyc29yOiBwb2ludGVyOyB9XG4gIC5idXR0b246aG92ZXIsIGJ1dHRvbjpob3ZlciwgaW5wdXRbdHlwZT1cInN1Ym1pdFwiXTpob3ZlciwgaW5wdXRbdHlwZT1cInJlc2V0XCJdOmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kOiBibGFjazsgfVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNTBlbSkge1xuICBuYXYuYmFzaWMge1xuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICB6LWluZGV4OiAxMDA7XG4gICAgdG9wOiAwO1xuICAgIGxlZnQ6IDA7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgYmFja2dyb3VuZDogIzIyMjsgfVxuICAgIG5hdi5iYXNpYyB1bCB7XG4gICAgICBtYXgtd2lkdGg6IDc3MHB4O1xuICAgICAgbWFyZ2luOiAwIGF1dG87XG4gICAgICB6b29tOiAxO1xuICAgICAgcGFkZGluZzogMDsgfVxuICAgICAgbmF2LmJhc2ljIHVsOmJlZm9yZSwgbmF2LmJhc2ljIHVsOmFmdGVyIHtcbiAgICAgICAgY29udGVudDogXCJcXDAwMjBcIjtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIGhlaWdodDogMDtcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjsgfVxuICAgICAgbmF2LmJhc2ljIHVsOmFmdGVyIHtcbiAgICAgICAgY2xlYXI6IGJvdGg7IH1cbiAgICAgIG5hdi5iYXNpYyB1bCBsaSB7XG4gICAgICAgIGZsb2F0OiBsZWZ0OyB9XG4gICAgICAgIG5hdi5iYXNpYyB1bCBsaSBhIHtcbiAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICBwYWRkaW5nOiAxMHB4O1xuICAgICAgICAgIGNvbG9yOiAjZmZmO1xuICAgICAgICAgIGZvbnQtd2VpZ2h0OiAxMDA7XG4gICAgICAgICAgZm9udC1zaXplOiAwLjllbTsgfVxuICAgICAgICBuYXYuYmFzaWMgdWwgbGkgdWwge1xuICAgICAgICAgIGRpc3BsYXk6IG5vbmU7IH1cbiAgICAgICAgICBuYXYuYmFzaWMgdWwgbGkgdWwgbGkge1xuICAgICAgICAgICAgZmxvYXQ6IG5vbmU7IH1cbiAgICAgICAgICAgIG5hdi5iYXNpYyB1bCBsaSB1bCBsaSBhIHtcbiAgICAgICAgICAgICAgY29sb3I6ICNhYWE7IH1cbiAgICAgICAgbmF2LmJhc2ljIHVsIGxpOmhvdmVyIHVsIHtcbiAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgei1pbmRleDogMTAwO1xuICAgICAgICAgIGJhY2tncm91bmQ6ICMyMjI7IH1cbiAgICAgICAgICBuYXYuYmFzaWMgdWwgbGk6aG92ZXIgdWwgbGkgYTpob3ZlciB7XG4gICAgICAgICAgICBjb2xvcjogI2ZmZjsgfSB9XG5cbmJvZHkge1xuICBmb250OiBub3JtYWwgMThweC8xLjZlbSBzYW5zLXNlcmlmOyB9XG5cbi53cmFwcGVyIHtcbiAgbWF4LXdpZHRoOiA4MDBweDtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHBhZGRpbmc6IDAgMTVweDsgfVxuXG4ucm93IHtcbiAgem9vbTogMTsgfVxuICAucm93OmJlZm9yZSwgLnJvdzphZnRlciB7XG4gICAgY29udGVudDogXCJcXDAwMjBcIjtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBoZWlnaHQ6IDA7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjsgfVxuICAucm93OmFmdGVyIHtcbiAgICBjbGVhcjogYm90aDsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNjRlbSkge1xuICAgIC5yb3cgLmNvbC02IHtcbiAgICAgIHdpZHRoOiA0OS4xNTI1NCU7XG4gICAgICBmbG9hdDogbGVmdDtcbiAgICAgIG1hcmdpbi1yaWdodDogMS42OTQ5MiU7IH0gfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNjRlbSkge1xuICAgIC5yb3cgLmNvbC02Omxhc3QtY2hpbGQge1xuICAgICAgd2lkdGg6IDQ5LjE1MjU0JTtcbiAgICAgIGZsb2F0OiByaWdodDtcbiAgICAgIG1hcmdpbi1yaWdodDogMDsgfSB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA2NGVtKSB7XG4gICAgLnJvdyAuY29sLTYubGFzdC1jaGlsZCB7XG4gICAgICB3aWR0aDogNDkuMTUyNTQlO1xuICAgICAgZmxvYXQ6IHJpZ2h0O1xuICAgICAgbWFyZ2luLXJpZ2h0OiAwOyB9IH1cblxuIiwiIEBtaXhpbiBicmVha3BvaW50KCRwb2ludCkge1xuIFx0QGlmICRwb2ludCA9PSBsYXJnZSB7XG5cdFx0QG1lZGlhIChtaW4td2lkdGg6IDkwZW0pIHsgQGNvbnRlbnQ7IH1cblx0fVxuXHRAaWYgJHBvaW50ID09IGRlc2t0b3Age1xuXHRcdC8vIDcwIHggMTZweCA9IDExMjBweFxuXHRcdEBtZWRpYSAobWluLXdpZHRoOiA3MGVtKSB7IEBjb250ZW50OyB9XG5cdH1cblx0QGVsc2UgaWYgJHBvaW50ID09IGxhcHRvcCB7XG5cdFx0Ly8gNjQgeCAxNnB4ID0gMTAyNHB4XG5cdFx0QG1lZGlhIChtaW4td2lkdGg6IDY0ZW0pIHsgQGNvbnRlbnQ7IH1cblx0fVxuXHRAZWxzZSBpZiAkcG9pbnQgPT0gdGFibGV0IHtcblx0XHQvLyA1MCB4IDE2cHggPSA4MDBweFxuXHRcdEBtZWRpYSAobWluLXdpZHRoOiA1MGVtKSB7IEBjb250ZW50OyB9XG5cdH1cblx0QGVsc2UgaWYgJHBvaW50ID09IHBoYWJsZXQge1xuXHRcdC8vIDM3LjUgeCAxNnB4ID0gNjAwcHhcblx0XHRAbWVkaWEgKG1pbi13aWR0aDogMzcuNWVtKSAgeyBAY29udGVudDsgfVxuXHR9XG5cdEBlbHNlIGlmICRwb2ludCA9PSBtb2JpbGVvbmx5IHtcblx0XHQvLyA1MCB4IDE2cHggPSA4MDBweFxuXHRcdEBtZWRpYSAobWF4LXdpZHRoOiA1MGVtKSAgeyBAY29udGVudDsgfVxuXHR9XG5cdEBlbHNlIGlmICRwb2ludCA9PSB0b3VjaG9ubHkge1xuXHRcdEBtZWRpYSAobWF4LXdpZHRoOiA3MGVtKSAgeyBAY29udGVudDsgfVxuXHR9XG59IiwiYm9keSB7XG5cdGZvbnQ6IG5vcm1hbCAxOHB4LzEuNmVtIHNhbnMtc2VyaWY7XG59XG5cbi53cmFwcGVyIHtcblx0bWF4LXdpZHRoOiA4MDBweDtcblx0bWFyZ2luOiAwIGF1dG87XG5cdHBhZGRpbmc6IDAgMTVweDtcbn1cblxuLnJvdyB7XG5cdEBpbmNsdWRlIGNsZWFyZml4O1xuXHQuY29sLTYge1xuXHRcdEBpbmNsdWRlIGJyZWFrcG9pbnQobGFwdG9wKSB7XG5cdFx0XHRAaW5jbHVkZSBzcGFuKDYpO1xuXHRcdH1cblx0XHQmOmxhc3QtY2hpbGQge1xuXHRcdFx0QGluY2x1ZGUgYnJlYWtwb2ludChsYXB0b3ApIHtcblx0XHRcdFx0QGluY2x1ZGUgc3Bhbig2IGxhc3QpO1xuXHRcdFx0fVxuXHRcdH1cblx0XHQmLmxhc3QtY2hpbGQge1xuXHRcdFx0QGluY2x1ZGUgYnJlYWtwb2ludChsYXB0b3ApIHtcblx0XHRcdFx0QGluY2x1ZGUgc3Bhbig2IGxhc3QpO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxufSIsIi8vIHJlbSBTdXBwb3J0XG4vLyA9PT09PT09PT09PVxuXG4vLyByZW1cbi8vIC0tLVxuLy8gQ2hlY2sgZm9yIGFuIGV4aXN0aW5nIHN1cHBvcnQgbWl4aW4sIG9yIG91dHB1dCBkaXJlY3RseS5cbi8vIC0gJHByb3AgIDogPGNzcyBwcm9wZXJ0eT5cbi8vIC0gJHZhbCAgIDogPGNzcyB2YWx1ZT5cbkBtaXhpbiBzdXN5LXJlbShcbiAgJHByb3AsXG4gICR2YWxcbikge1xuICAkX3JlcXM6IChcbiAgICB2YXJpYWJsZTogcmh5dGhtLXVuaXQgcmVtLXdpdGgtcHgtZmFsbGJhY2ssXG4gICAgbWl4aW46IHJlbSxcbiAgKTtcbiAgQGlmIHN1c3ktc3VwcG9ydChyZW0sICRfcmVxcywgJHdhcm46IGZhbHNlKSBhbmQgJHJoeXRobS11bml0ID09IHJlbSB7XG4gICAgQGluY2x1ZGUgcmVtKCRwcm9wLCAkdmFsKTtcbiAgfSBAZWxzZSB7XG4gICAgI3skcHJvcH06ICR2YWw7XG4gIH1cbn1cbiIsIi8vIEZsb2F0IFNwYW4gQVBJXG4vLyA9PT09PT09PT09PT09PVxuXG4vLyBGbG9hdCBTcGFuIE91dHB1dFxuLy8gLS0tLS0tLS0tLS0tLS0tLS1cbi8vIC0gJHdpZHRoICAgICAgICAgICAgIDogPGxlbmd0aD5cbi8vIC0gWyRmbG9hdF0gICAgICAgICAgIDogZnJvbSB8IHRvXG4vLyAtIFskbWFyZ2luLWJlZm9yZV0gICA6IDxsZW5ndGg+XG4vLyAtIFskbWFyZ2luLWFmdGVyXSAgICA6IDxsZW5ndGg+XG4vLyAtIFskcGFkZGluZy1iZWZvcmVdICA6IDxsZW5ndGg+XG4vLyAtIFskcGFkZGluZy1hZnRlcl0gICA6IDxsZW5ndGg+XG4vLyAtIFskZmxvd10gICAgICAgICAgICA6IGx0ciB8IHJ0bFxuQG1peGluIGZsb2F0LXNwYW4tb3V0cHV0KFxuICAkd2lkdGgsXG4gICRmbG9hdCAgICAgICAgICAgIDogZnJvbSxcbiAgJG1hcmdpbi1iZWZvcmUgICAgOiBudWxsLFxuICAkbWFyZ2luLWFmdGVyICAgICA6IG51bGwsXG4gICRwYWRkaW5nLWJlZm9yZSAgIDogbnVsbCxcbiAgJHBhZGRpbmctYWZ0ZXIgICAgOiBudWxsLFxuICAkZmxvdyAgICAgICAgICAgICA6IG1hcC1nZXQoJHN1c3ktZGVmYXVsdHMsIGZsb3cpXG4pIHtcbiAgJHRvICAgICA6IHRvKCRmbG93KTtcbiAgJGZyb20gICA6IGZyb20oJGZsb3cpO1xuXG4gICRvdXRwdXQ6IChcbiAgICB3aWR0aDogJHdpZHRoLFxuICAgIGZsb2F0OiBpZigkZmxvYXQgPT0gdG8sICR0bywgbnVsbCkgb3IgaWYoJGZsb2F0ID09IGZyb20sICRmcm9tLCBudWxsKSxcbiAgICBtYXJnaW4tI3skZnJvbX06ICRtYXJnaW4tYmVmb3JlLFxuICAgIG1hcmdpbi0jeyR0b306ICRtYXJnaW4tYWZ0ZXIsXG4gICAgcGFkZGluZy0jeyRmcm9tfTogJHBhZGRpbmctYmVmb3JlLFxuICAgIHBhZGRpbmctI3skdG99OiAkcGFkZGluZy1hZnRlcixcbiAgKTtcblxuICBAaW5jbHVkZSBvdXRwdXQoJG91dHB1dCk7XG59XG4iLCIvLyBTcGFuIFN5bnRheFxuLy8gPT09PT09PT09PT1cblxuLy8gU3BhbiBbbWl4aW5dXG4vLyAtLS0tLS0tLS0tLS1cbi8vIFNldCBhIHNwYW5uaW5nIGVsZW1lbnQgdXNpbmcgc2hvcnRoYW5kIHN5bnRheC5cbi8vIC0gJHNwYW4gIDogPHNwYW4+XG5AbWl4aW4gc3BhbihcbiAgJHNwYW5cbikge1xuICAkaW5zcGVjdDogJHNwYW47XG4gICRzcGFuOiBwYXJzZS1zcGFuKCRzcGFuKTtcbiAgJG91dHB1dDogc3Bhbi1tYXRoKCRzcGFuKTtcbiAgJG5lc3Rpbmc6IHN1c3ktZ2V0KHNwYW4sICRzcGFuKTtcbiAgJGNsZWFyOiBzdXN5LWdldChjbGVhciwgJHNwYW4pO1xuXG4gICRib3g6IHN1c3ktZ2V0KGJveC1zaXppbmcsICRzcGFuKTtcbiAgJGNvbnRlbnQtYm94OiBpZihzdXN5LWdldChnbG9iYWwtYm94LXNpemluZykgIT0gJ2JvcmRlci1ib3gnLCB0cnVlLCBmYWxzZSk7XG4gICRib3g6ICRib3ggb3IgaWYoaXMtaW5zaWRlKCRzcGFuKSBhbmQgJGNvbnRlbnQtYm94LCBib3JkZXItYm94LCBudWxsKTtcblxuICBAaWYgJGNsZWFyID09IGJyZWFrIHtcbiAgICBAaW5jbHVkZSBicmVhaztcbiAgfSBAZWxzZSBpZiAkY2xlYXIgPT0gbm9icmVhayB7XG4gICAgQGluY2x1ZGUgbm9icmVhaztcbiAgfVxuXG4gIEBpbmNsdWRlIHN1c3ktaW5zcGVjdChzcGFuLCAkaW5zcGVjdCk7XG4gIEBpbmNsdWRlIG91dHB1dCgoYm94LXNpemluZzogJGJveCkpO1xuICBAaW5jbHVkZSBmbG9hdC1zcGFuLW91dHB1dCgkb3V0cHV0Li4uKTtcblxuICBAaWYgdmFsaWQtY29sdW1ucygkbmVzdGluZywgc2lsZW50KSB7XG4gICAgQGluY2x1ZGUgbmVzdGVkKCRzcGFuKSB7IEBjb250ZW50OyB9XG4gIH0gQGVsc2Uge1xuICAgIEBjb250ZW50O1xuICB9XG59XG5cbi8vIFNwYW4gW2Z1bmN0aW9uXVxuLy8gLS0tLS0tLS0tLS0tLS0tXG4vLyBSZXR1cm4gdGhlIHdpZHRoIG9mIGEgc3Bhbi5cbi8vIC0gJHNwYW4gIDogPHNwYW4+XG5AZnVuY3Rpb24gc3BhbihcbiAgJHNwYW5cbikge1xuICBAcmV0dXJuIGdldC1zcGFuLXdpZHRoKCRzcGFuKTtcbn1cblxuLy8gU3BhbiBNYXRoXG4vLyAtLS0tLS0tLS1cbi8vIEdldCBhbGwgdGhlIHNwYW4gcmVzdWx0cy5cbi8vIC0gJHNwYW46IDxtYXA+XG5AZnVuY3Rpb24gc3Bhbi1tYXRoKFxuICAkc3BhblxuKSB7XG4gICRuZXN0ICAgICAgICAgICAgIDogaWYoc3VzeS1nZXQocm9sZSwgJHNwYW4pID09IG5lc3QsIHRydWUsIGZhbHNlKTtcbiAgJHNwbGl0LW5lc3QgICAgICAgOiBpZihpcy1zcGxpdCgkc3BhbikgYW5kICRuZXN0LCB0cnVlLCBmYWxzZSk7XG4gICRlZGdlICAgICAgICAgICAgIDogZ2V0LWVkZ2UoJHNwYW4pO1xuICAkbG9jYXRpb24gICAgICAgICA6IGdldC1sb2NhdGlvbigkc3Bhbik7XG5cbiAgJGZsb2F0ICAgICAgICAgICAgOiBmcm9tO1xuICAkcGFkZGluZy1iZWZvcmUgICA6IG51bGw7XG4gICRwYWRkaW5nLWFmdGVyICAgIDogbnVsbDtcbiAgJG1hcmdpbi1iZWZvcmUgICAgOiBudWxsO1xuICAkbWFyZ2luLWFmdGVyICAgICA6IG51bGw7XG5cbiAgLy8gY2FsY3VsYXRlIHdpZHRoc1xuICAkc3ByZWFkOiBpbmRleChtYXAtdmFsdWVzKCRzcGFuKSwgc3ByZWFkKTtcbiAgJHNwYW46IGlmKCRzcGxpdC1uZXN0IGFuZCBub3QoJHNwcmVhZCksIG1hcC1tZXJnZSgkc3BhbiwgKHNwcmVhZDogd2lkZSkpLCAkc3Bhbik7XG4gICR3aWR0aDogZ2V0LXNwYW4td2lkdGgoJHNwYW4pO1xuICAkZ3V0dGVyczogZ2V0LWd1dHRlcnMoJHNwYW4pO1xuXG4gIC8vIGFwcGx5IGd1dHRlcnNcbiAgQGlmIGlzLWluc2lkZSgkc3Bhbikge1xuICAgIEBpZiBub3Qoc3VzeS1nZXQocm9sZSwgJHNwYW4pKSB7XG4gICAgICAkcGFkZGluZy1iZWZvcmU6IG1hcC1nZXQoJGd1dHRlcnMsIGJlZm9yZSk7XG4gICAgICAkcGFkZGluZy1hZnRlcjogbWFwLWdldCgkZ3V0dGVycywgYWZ0ZXIpO1xuICAgIH1cbiAgfSBAZWxzZSB7XG4gICAgQGlmIG5vdCgkc3BsaXQtbmVzdCkge1xuICAgICAgJG1hcmdpbi1iZWZvcmU6IG1hcC1nZXQoJGd1dHRlcnMsIGJlZm9yZSk7XG4gICAgICAkbWFyZ2luLWFmdGVyOiBtYXAtZ2V0KCRndXR0ZXJzLCBhZnRlcik7XG4gICAgfVxuICB9XG5cbiAgLy8gc3BlY2lhbCBtYXJnaW4gaGFuZGxpbmdcbiAgQGlmIHN1c3ktZ2V0KG91dHB1dCwgJHNwYW4pID09IGlzb2xhdGUgYW5kICRsb2NhdGlvbiB7XG4gICAgJG1hcmdpbi1iZWZvcmU6IGdldC1pc29sYXRpb24oJHNwYW4pO1xuICAgICRtYXJnaW4tYWZ0ZXI6IC0xMDAlO1xuICB9IEBlbHNlIGlmICRlZGdlIHtcbiAgICAkaXMtc3BsaXQ6IGlzLXNwbGl0KCRzcGFuKTtcbiAgICAkcG9zOiBzdXN5LWdldChndXR0ZXItcG9zaXRpb24sICRzcGFuKTtcblxuICAgIEBpZiAkZWRnZSA9PSBsYXN0IHtcbiAgICAgICRmbG9hdDogc3VzeS1nZXQobGFzdC1mbG93LCAkc3Bhbik7XG4gICAgfVxuXG4gICAgQGlmIG5vdCgkaXMtc3BsaXQpIHtcbiAgICAgIEBpZiAkZWRnZSA9PSBmdWxsIG9yICgkZWRnZSA9PSBmaXJzdCBhbmQgJHBvcyA9PSBiZWZvcmUpIHtcbiAgICAgICAgJG1hcmdpbi1iZWZvcmU6IDA7XG4gICAgICB9XG4gICAgICBAaWYgJGVkZ2UgPT0gZnVsbCBvciAoJGVkZ2UgPT0gbGFzdCBhbmQgJHBvcyA9PSBhZnRlcikge1xuICAgICAgICAkbWFyZ2luLWFmdGVyOiAwO1xuICAgICAgfVxuICAgIH1cblxuICB9XG5cbiAgQHJldHVybiAoXG4gICAgd2lkdGggICAgICAgICAgIDogJHdpZHRoLFxuICAgIGZsb2F0ICAgICAgICAgICA6ICRmbG9hdCxcbiAgICBtYXJnaW4tYmVmb3JlICAgOiAkbWFyZ2luLWJlZm9yZSxcbiAgICBtYXJnaW4tYWZ0ZXIgICAgOiAkbWFyZ2luLWFmdGVyLFxuICAgIHBhZGRpbmctYmVmb3JlICA6ICRwYWRkaW5nLWJlZm9yZSxcbiAgICBwYWRkaW5nLWFmdGVyICAgOiAkcGFkZGluZy1hZnRlcixcbiAgICBmbG93ICAgICAgICAgICAgOiBzdXN5LWdldChmbG93LCAkc3BhbiksXG4gICk7XG59XG5cbi8vIEdldCBTcGFuIFdpZHRoXG4vLyAtLS0tLS0tLS0tLS0tLVxuLy8gUmV0dXJuIHNwYW4gd2lkdGguXG4vLyAtICRzcGFuOiA8bWFwPlxuQGZ1bmN0aW9uIGdldC1zcGFuLXdpZHRoKFxuICAkc3BhblxuKSB7XG4gICRzcGFuICAgICA6IHBhcnNlLXNwYW4oJHNwYW4pO1xuXG4gICRuICAgICAgICA6IHN1c3ktZ2V0KHNwYW4sICRzcGFuKTtcbiAgJGxvY2F0aW9uIDogZ2V0LWxvY2F0aW9uKCRzcGFuKTtcbiAgJGNvbHVtbnMgIDogc3VzeS1nZXQoY29sdW1ucywgJHNwYW4pO1xuICAkZ3V0dGVycyAgOiBzdXN5LWdldChndXR0ZXJzLCAkc3Bhbik7XG4gICRzcHJlYWQgICA6IHN1c3ktZ2V0KHNwcmVhZCwgJHNwYW4pO1xuXG4gICRjb250ZXh0ICA6IG51bGw7XG4gICRzcGFuLXN1bSA6IG51bGw7XG4gICR3aWR0aCAgICA6IG51bGw7XG5cbiAgQGlmICRuID09ICdmdWxsJyB7XG4gICAgJHBvczogc3VzeS1nZXQoZ3V0dGVyLXBvc2l0aW9uLCAkc3Bhbik7XG4gICAgJHJvbGU6IHN1c3ktZ2V0KHJvbGUsICRzcGFuKTtcbiAgICAkbjogaWYoJHBvcyA9PSBzcGxpdCBhbmQgJHJvbGUgIT0gbmVzdCwgc3VzeS1jb3VudCgkY29sdW1ucyksIDEwMCUpO1xuICB9XG5cbiAgQGlmIHR5cGUtb2YoJG4pICE9IG51bWJlciB7XG4gICAgQHdhcm4gXCIoI3t0eXBlLW9mKCRuKX0pICN7JG59IGlzIG5vdCBhIHZhbGlkIHNwYW4uXCI7XG4gIH0gQGVsc2UgaWYgdW5pdGxlc3MoJG4pIHtcbiAgICAkY29udGV4dDogc3VzeS1zdW0oJGNvbHVtbnMsICRndXR0ZXJzLCBpZihpcy1zcGxpdCgkc3BhbiksIHdpZGUsIG5hcnJvdykpO1xuICAgICRzcHJlYWQ6IGlmKGlzLWluc2lkZSgkc3BhbiksICRzcHJlYWQgb3Igd2lkZSwgJHNwcmVhZCk7XG4gICAgJHNwYW4tc3VtOiBzdXN5KCRuLCAkbG9jYXRpb24sICRjb2x1bW5zLCAkZ3V0dGVycywgJHNwcmVhZCk7XG5cbiAgICAkX21hdGg6IHN1c3ktZ2V0KG1hdGgsICRzcGFuKTtcbiAgICAkX2NvbHVtbi13aWR0aDogc3VzeS1nZXQoY29sdW1uLXdpZHRoLCAkc3Bhbik7XG4gICAgQGlmICRfbWF0aCA9PSBzdGF0aWMge1xuICAgICAgJHdpZHRoOiAkc3Bhbi1zdW0gKiB2YWxpZC1jb2x1bW4tbWF0aCgkX21hdGgsICRfY29sdW1uLXdpZHRoKTtcbiAgICB9IEBlbHNlIHtcbiAgICAgICR3aWR0aDogcGVyY2VudGFnZSgkc3Bhbi1zdW0gLyAkY29udGV4dCk7XG4gICAgfVxuICB9IEBlbHNlIHtcbiAgICAkd2lkdGg6ICRuO1xuICB9XG5cbiAgQHJldHVybiAkd2lkdGg7XG59XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0= */